/*
 * Copyright (c) 2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
this is comment which is not tracked
    */
/*this is comment which is not tracked*/
@outputDir("erpc_outputs")
program test_others

import "imports/test2.erpc"
/*!
1 comment
*/
/*! 2 comment*/
/*!3 comment*/
/** 4 comment */
/**5 comment*/
/**
6 comment
*/

/*!
7 comment
*/
//this is comment which is not tracked
// this is comment which is not tracked
/// 8 comment
///9 comment
//! 10 comment
//!11 comment
const int32 ii = 5 //!< 12 comment

/**
 * 13 comment
 */
enum enumColor //!< 14 comment
{
    /** 15 comment */
    /**
    15 comment again
    */
    red,  /**< 16 comment */
    green,  /**<17 comment */
    blue  /*!< 18 comment */
}

/*!
19 comment
*/
struct A //!< 20 comment
{
    ///21 comment
    int32 m    //!< 22 comment
    ///23 comment
    int32 n    //!<24 comment
}

/// 25 comment
///26 comment
type ListType = list<int32> /*!<27 comment */

//! 28 comment
//!29 comment
interface DoxygenComments /*!<30 comment */
{
//! 31 comment
    //!32 comment
    sendReceiveInt(ListType a) -> ListType ///< 33 comment;
}
