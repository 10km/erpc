/*!
 * Copyright (c) 2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

//Add data structures and function prototypes here
//using Freescale's eRPC IDL language

@output_dir("erpc_outputs")
program test;

import "../common/unit_test_common.erpc"

enum numbers {one = 1, two, three, four}

type MyInt = int32
const MyInt ii = 5
const int32 xx = ii + 3

enum e_test { e_a, e_b, e_c = 20, e_d, e_f, e_g = 20, e_h }
const int32 a = 3
const float noDecimal = 4
const float b = 3.14
const string c = "feedbabe"
const int32 x = 3 + 2 * 4
const float d = b
const float y = e_c


const int32 count =  a + 2 * two + 5

const float mass = 100
const float accel = -9.8
const float force = mass * accel
const float work = a * force
const float stress = work / 9 * y + 12.2 - d
const float neg = -a
const float order = 9 + 3 * 4

const string nowAString = "hello"
//const string cantDoThis = 4.3
//const float itsAFloat = "string"
const int32 castIt = 5000000000
const string fromAnotherString = c

interface EmptyInterface{

}

//const MyInt foo = "hello"

