/*
 * Copyright (c) 2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

@include("myAlloc.h")
@output_dir("erpc_outputs")
program test;

import "../common/unit_test_common.erpc"

interface BuiltinServices
{
    oneway test_int32_in(int32 a)
    test_int32_in2(in int32 b) -> void
    test_int32_out(out int32 c) -> void
    test_int32_outbyref(out byref int32 d) -> void
    test_int32_inout(inout int32 e) -> void
    test_int32_return() -> int32
    test_int32_allDirection(int32 a, in int32 b, out int32 c, out byref int32 d, inout int32 e) -> int32

    test_float_inout(in float a, out float b) -> void

    test_double_inout(in double a, out double b) -> void

    oneway test_string_in(string a)
    test_string_in2(in string b) -> void
    test_string_out(out string c @max_length(6)) -> void
    test_string_outbyref(out byref string d) -> void
    test_string_inout(inout string e @max_length(13)) -> void
    test_string_return() -> string
    test_string_allDirection(string a, in string b, out string c @max_length(6), out byref string d, inout string e @max_length(13)) -> string
    test_string_empty(string a, in string b, out string c @max_length(6), out byref string d, inout string e @max_length(0)) -> string
    sendHello(string str) -> int32
    sendTwoStrings(string myStr1, string myStr2) -> int32
    returnHello() -> string
}
