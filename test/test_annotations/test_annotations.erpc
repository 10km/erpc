/*!
 * The Clear BSD License
 * Copyright (c) 2016, Freescale Semiconductor, Inc.
 * Copyright 2016 NXP
 * All rights reserved.
 *
 * 
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted (subject to the limitations in the disclaimer below) provided
 *  that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

//Add data structures and function prototypes here
//using Freescale's eRPC IDL language
@include("myAlloc.h")
@output_dir("erpc_outputs/") // testing directory with slash on end
@include("addOne.h")
@include("external.h")
program test;
import "../common/unit_test_common.erpc"

//test for external type
@external
type myInt = int32;

@external
const int32 i = 4

@external
enum myEnum { one, two, three }

@external
struct fooStruct
{
	int32 x
	float y
}

struct nullableStruct
{
    int32 a
    float b
}

//@annote(doesThisWork)
//type pressure = int32
//
//@copy(3)
//struct A {
//    int32 x @annotate(this)
//    float y @defaultValue(3.14)
//}
//
@id(5)
//@funcName("TestFunc")
//@temperature(98.6)
interface AnnotateTest {
    add(int32 a, int32 b) -> int32
    oneway testIfFooStructExist(fooStruct a @nullable)
    oneway testIfMyEnumExist(myEnum a)
    testIfMyIntAndConstExist(myInt a) -> myInt
}
//@id(5)
//interface iface2Test
//{
//}
//
//@id(3)
//interface foobar {}
//
//@id(3)
//interface barfoo {}
//
//@id(5)
//interface baz {}
