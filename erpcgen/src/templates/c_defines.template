{# Variables #}
{% if generateInfraErrorChecks %}
{%   set infraErrIndents = "    " %}
{%   set infraErrVar = "err = " %}
{% else %}
{%   set infraErrIndents = "" %}
{%   set infraErrVar = "" %}
{% endif %}
{% if generateAllocErrorChecks %}
{%   set allocErrIndents = "    " %}
{%   set allocErrVar = "err = " %}
{% else %}
{%   set allocErrIndents = "" %}
{%   set allocErrVar = "" %}
{% endif %}
{% if generateInfraErrorChecks or generateAllocErrorChecks %}
{%   set errVar = "err = " %}
{% else %}
{%   set errVar = "" %}
{% endif %}

{# Code #}
{%   set s_performRequest = infraErrVar & "g_client->performRequest(request);" %}
{%   set s_prepareServerBufferForSend = infraErrVar & "messageFactory->prepareServerBufferForSend(codec->getBuffer());" %}

{% def f_clientEncode(iface, fn) %}
{$addInfraErrorChecks("    ", f_clientStartWriteMessage(fn.isReturnValue, iface.name, fn.name))}

{%   if fn.isSendValue %}
{%    for param in fn.parameters if (param.serializedDirection == "" || param.serializedDirection == OutDirection || param.referencedName != "") %}
{%     if param.isNullable %}
{$ addInfraErrorChecks("    ", f_paramIsNullableEncode(param))}

{%     else -- isNullable %}
{%      if param.direction != OutDirection %}
{$addInfraErrorChecks("    ", param.coderCall.encode(param.coderCall))}

{%      endif -- param != OutDirection %}
{%     endif -- isNullable %}
{%    endfor -- fn parameters %}
{%   endif -- isSendValue %}
    // Send message to server
{$addInfraErrorChecks("    ", s_performRequest)}
{% enddef %}

{% def f_clientDecode(iface, fn) %}
{%    for param in fn.parametersToClient if (param.serializedDirection == "" || param.serializedDirection == InDirection || param.referencedName != "") %}
{%     if param.isNullable %}
    if ({$param.nullableName} != NULL{% if ((source == "client") && (param.direction != ReturnDirection) && (empty(param.lengthName) == false)) %} && {$param.lengthName} != NULL{% endif %})
    {
{$addInfraErrorChecks("        ", param.coderCall.decode(param.coderCall))}
    }{$loop.addNewLineIfNotLast}
{%     else -- notNullable %}
{$addInfraErrorChecks("    ", param.coderCall.decode(param.coderCall))}{$loop.addNewLineIfNotLast}
{%     endif -- isNullable %}
{%    endfor -- fn parametersToClient %}
{%    if fn.returnValue.type.isNotVoid %}
{%     if count(fn.parametersToClient) > 0 %}
{# need empty line for this case #}

{%     endif %}
{%     if fn.returnValue.isNullable %}
    bool isNull;
{$addInfraErrorChecks("    ", f_paramIsNullableDecode(fn.returnValue))}
{%     else -- isNullable %}
{$> addIndent("    ", fn.returnValue.firstAlloc)}
{$addInfraErrorChecks("    ", fn.returnValue.coderCall.decode(fn.returnValue.coderCall))}
{%     endif -- isNullable %}
{%    endif -- isNotVoid %}
{% enddef %}

{% def f_clientStartWriteMessage(isReturnValue, interfaceName, functionName) %}
{$infraErrVar}codec->startWriteMessage({% if not isReturnValue %}kOnewayMessage{%else%}kInvocationMessage{%endif%}, k{$interfaceName}_service_id, k{$interfaceName}_{$functionName}_id, request.getSequence());
{% enddef %}

{% def f_serverStartWriteMessage(interfaceName, functionName) %}
{$infraErrVar}codec->startWriteMessage(kReplyMessage, k{$interfaceName}_service_id, k{$interfaceName}_{$functionName}_id, sequence);
{% enddef %}

{% def f_paramIsNullableEncode(param) %}
if ({$param.nullableName} == NULL{% if ((source == "client") && (param.direction != ReturnDirection) && (empty(param.lengthName) == false)) %} || {$param.lengthName} == NULL{% endif %})
{
    {$infraErrVar}codec->writeNullFlag(true);
}
else
{
    {$infraErrVar}codec->writeNullFlag(false);
{# Out will send only null information from client to server that it is not null #}
{% if param.direction != OutDirection %}
{$addInfraErrorChecks("    ", param.coderCall.encode(param.coderCall))}
{% endif -- param.direction != OutDirection %}
}
{% enddef %}

{% def f_paramIsNullableDecode(param) %}
{$infraErrVar}codec->readNullFlag(&isNull);
if (!isNull)
{
{% if source == "server" %}
{$> addIndent("    ", param.mallocServer)}
{% endif %}
{$> addIndent("    ", param.firstAlloc)}
{# Out will receive only null information from client to server that it is not null #}
{% if param.direction != OutDirection %}
{$addInfraErrorChecks("    ", param.coderCall.decode(param.coderCall))}
{% endif -- param.direction != OutDirection %}
{% if source == "server" && empty(param.nullVariable) == false %}
    _{$param.nullableName} = &{$param.nullableName};
{% endif %}
}
else
{
    {% if source == "server" && !empty(param.nullVariable) %}_{% endif %}{$param.nullableName} = NULL;
}
{% enddef %}

{% def f_startReadStruct()%}
// Decode reply. startReadMessage has already been called for us by performRequest.
{$infraErrVar}codec->startReadStruct();
{% enddef %}
